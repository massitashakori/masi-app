{"ast":null,"code":"var _jsxFileName = \"/Users/RoyalTown/Project/masi-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // ported code from http://en.wikipedia.org/wiki/Hilbert_curve\n\nfunction xy2d(n, p) {\n  p = {\n    x: p.x,\n    y: p.y\n  };\n  var r = {\n    x: 0,\n    y: 0\n  },\n      s,\n      d = 0;\n\n  for (s = n / 2 | 0; s > 0; s = s / 2 | 0) {\n    r.x = (p.x & s) > 0 ? 1 : 0;\n    r.y = (p.y & s) > 0 ? 1 : 0;\n    d += s * s * (3 * r.x ^ r.y);\n    rot(s, p, r);\n  }\n\n  return d;\n} //convert d to (x,y)\n\n\nfunction d2xy(n, d) {\n  var r = {\n    x: 0,\n    y: 0\n  },\n      p = {\n    x: 0,\n    y: 0\n  },\n      s,\n      t = d;\n\n  for (s = 1; s < n; s *= 2) {\n    r.x = 1 & t / 2;\n    r.y = 1 & (t ^ rx);\n    rot(s, p, r);\n    p.x += s * r.x;\n    p.y += s * r.y;\n    t /= 4;\n  }\n\n  return p;\n} //rotate/flip a quadrant appropriately\n\n\nfunction rot(n, p, r) {\n  if (r.y === 0) {\n    if (r.x === 1) {\n      p.x = n - 1 - p.x;\n      p.y = n - 1 - p.y;\n    } //Swap x and y\n\n\n    var t = p.x;\n    p.x = p.y;\n    p.y = t;\n  }\n}\n\nfunction v2rgb(v) {\n  return (v & 0xf800) << 8 | (v & 0x7e0) << 5 | (v & 0x1f) << 3;\n}\n\nfunction putData(arr, size, coord, v) {\n  var pos = (coord.x + size * coord.y) * 4,\n      rgb = v2rgb(v);\n  arr[pos] = (rgb & 0xff0000) >> 16;\n  arr[pos + 1] = (rgb & 0xff00) >> 8;\n  arr[pos + 2] = rgb & 0xff;\n  arr[pos + 3] = 0xff;\n}\n\nfunction rainbowImg() {\n  var size = 256,\n      context = a.getContext('2d'),\n      data = context.getImageData(0, 0, size, size);\n\n  for (var i = 0; i < size; i++) {\n    for (var j = 0; j < size; j++) {\n      var p = {\n        x: j,\n        y: i\n      };\n      putData(data.data, size, p, xy2d(size, p));\n    }\n  }\n\n  context.putImageData(data, 0, 0);\n}\n\nReactDOM.render(React.createElement(\"rainbowImg\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/RoyalTown/Project/masi-app/src/index.js"],"names":["React","ReactDOM","xy2d","n","p","x","y","r","s","d","rot","d2xy","t","rx","v2rgb","v","putData","arr","size","coord","pos","rgb","rainbowImg","context","a","getContext","data","getImageData","i","j","putImageData","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\n// ported code from http://en.wikipedia.org/wiki/Hilbert_curve\nfunction xy2d (n, p) {\n    p = {x: p.x, y: p.y};\n    var r = {x: 0, y: 0},\n        s,\n        d=0;\n    for (s=(n/2)|0; s>0; s=(s/2)|0) {\n        r.x = (p.x & s) > 0 ? 1 : 0;\n        r.y = (p.y & s) > 0 ? 1 : 0;\n        d += s * s * ((3 * r.x) ^ r.y);\n        rot(s, p, r);\n    }\n    return d;\n}\n\n//convert d to (x,y)\nfunction d2xy(n, d) {\n    var r = {x: 0, y: 0},\n        p = {x: 0, y: 0},\n        s,\n        t=d;\n    for (s=1; s<n; s*=2) {\n        r.x = 1 & (t/2);\n        r.y = 1 & (t ^ rx);\n        rot(s, p, r);\n        p.x += s * r.x;\n        p.y += s * r.y;\n        t /= 4;\n    }\n    return p;\n}\n\n//rotate/flip a quadrant appropriately\nfunction rot(n, p, r) {\n    if (r.y === 0) {\n        if (r.x === 1) {\n            p.x = n-1 - p.x;\n            p.y = n-1 - p.y;\n        }\n\n        //Swap x and y\n        var t  = p.x;\n        p.x = p.y;\n        p.y = t;\n    }\n}\nfunction v2rgb(v) {\n    return ((v & 0xf800) << 8) | ((v & 0x7e0) << 5) | ((v & 0x1f) << 3); \n}\nfunction putData(arr, size, coord, v) {\n    var pos = (coord.x + size * coord.y) * 4,\n        rgb = v2rgb(v);\n\n    arr[pos] = (rgb & 0xff0000) >> 16;\n    arr[pos + 1] = (rgb & 0xff00) >> 8;\n    arr[pos + 2] = rgb & 0xff;\n    arr[pos + 3] = 0xff;\n}\nfunction rainbowImg() {\n    var size = 256,\n        context = a.getContext('2d'),\n        data = context.getImageData(0, 0, size, size);\n\n    for (var i = 0; i < size; i++) {\n        for (var j = 0; j < size; j++) {\n            var p = {x: j, y: i};\n            putData(data.data, size, p, xy2d(size, p));\n        }\n    }\n    context.putImageData(data, 0, 0);\n}\nReactDOM.render(\n    <rainbowImg/>\n    , document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}